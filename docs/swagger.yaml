definitions:
  internal_handlers.AuthorListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Author'
        type: array
      page:
        $ref: '#/definitions/internal_handlers.PaginationResponse'
    type: object
  internal_handlers.BookListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Book'
        type: array
      page:
        $ref: '#/definitions/internal_handlers.PaginationResponse'
    type: object
  internal_handlers.ErrResponse:
    properties:
      app_code:
        type: integer
      code:
        type: integer
      error:
        type: string
      status:
        type: string
    type: object
  internal_handlers.LanguageListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Language'
        type: array
      page:
        $ref: '#/definitions/internal_handlers.PaginationResponse'
    type: object
  internal_handlers.PaginationResponse:
    properties:
      next:
        type: string
      nextCursor:
        type: string
    type: object
  internal_handlers.PublisherListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Publisher'
        type: array
      page:
        $ref: '#/definitions/internal_handlers.PaginationResponse'
    type: object
  internal_handlers.SeriesListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Series'
        type: array
      page:
        $ref: '#/definitions/internal_handlers.PaginationResponse'
    type: object
  internal_handlers.TagListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Tag'
        type: array
      page:
        $ref: '#/definitions/internal_handlers.PaginationResponse'
    type: object
  lybbrio_internal_calibre.Author:
    properties:
      books:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Book'
        type: array
      id:
        type: integer
      link:
        type: string
      name:
        type: string
      sort:
        type: string
    type: object
  lybbrio_internal_calibre.Book:
    properties:
      author_sort:
        type: string
      authors:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Author'
        type: array
      comments:
        $ref: '#/definitions/lybbrio_internal_calibre.Comment'
      flags:
        type: integer
      has_cover:
        type: boolean
      id:
        type: integer
      identifiers:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Identifier'
        type: array
      isbn:
        type: string
      languages:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Language'
        type: array
      last_modified:
        type: string
      lccn:
        type: string
      path:
        type: string
      pub_date:
        type: string
      publishers:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Publisher'
        type: array
      series_index:
        type: number
      sort:
        type: string
      tags:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Tag'
        type: array
      timestamp:
        type: string
      title:
        type: string
      uuid:
        type: string
    type: object
  lybbrio_internal_calibre.Comment:
    properties:
      book:
        type: integer
      id:
        type: integer
      text:
        type: string
    type: object
  lybbrio_internal_calibre.Identifier:
    properties:
      book:
        type: integer
      id:
        type: integer
      type:
        type: string
      val:
        type: string
    type: object
  lybbrio_internal_calibre.Language:
    properties:
      books:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Book'
        type: array
      id:
        type: integer
      lang:
        type: string
    type: object
  lybbrio_internal_calibre.Publisher:
    properties:
      books:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Book'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  lybbrio_internal_calibre.Series:
    properties:
      book_count:
        type: integer
      books:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Book'
        type: array
      id:
        type: integer
      name:
        type: string
      sort:
        type: string
    type: object
  lybbrio_internal_calibre.Tag:
    properties:
      books:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Book'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  lybbrio_internal_handlers.AuthorListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Author'
        type: array
      page:
        $ref: '#/definitions/lybbrio_internal_handlers.PaginationResponse'
    type: object
  lybbrio_internal_handlers.BookListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Book'
        type: array
      page:
        $ref: '#/definitions/lybbrio_internal_handlers.PaginationResponse'
    type: object
  lybbrio_internal_handlers.ErrResponse:
    properties:
      app_code:
        type: integer
      code:
        type: integer
      error:
        type: string
      status:
        type: string
    type: object
  lybbrio_internal_handlers.LanguageListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Language'
        type: array
      page:
        $ref: '#/definitions/lybbrio_internal_handlers.PaginationResponse'
    type: object
  lybbrio_internal_handlers.PaginationResponse:
    properties:
      next:
        type: string
      nextCursor:
        type: string
    type: object
  lybbrio_internal_handlers.PublisherListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Publisher'
        type: array
      page:
        $ref: '#/definitions/lybbrio_internal_handlers.PaginationResponse'
    type: object
  lybbrio_internal_handlers.SeriesListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Series'
        type: array
      page:
        $ref: '#/definitions/lybbrio_internal_handlers.PaginationResponse'
    type: object
  lybbrio_internal_handlers.TagListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/lybbrio_internal_calibre.Tag'
        type: array
      page:
        $ref: '#/definitions/lybbrio_internal_handlers.PaginationResponse'
    type: object
info:
  contact:
    name: Maintainer
    url: https://lybbr.io
  license:
    name: AGPLv3
    url: <github license link>
paths:
  /authors:
    get:
      consumes:
      - application/json
      description: List Authors
      parameters:
      - description: Pagination cursor
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.AuthorListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
      summary: List Authors
      tags:
      - authors
  /authors/{authorId}:
    get:
      consumes:
      - application/json
      description: Get an author by ID
      parameters:
      - description: Author ID
        in: path
        name: authorId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lybbrio_internal_calibre.Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
      summary: Get an author
      tags:
      - authors
  /authors/{authorId}/books:
    get:
      consumes:
      - application/json
      description: Get an author's books by ID
      parameters:
      - description: Author ID
        in: path
        name: authorId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.BookListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
      summary: Get an author's books
      tags:
      - authors
  /authors/{authorId}/series:
    get:
      consumes:
      - application/json
      description: Get an author's series by ID
      parameters:
      - description: Author ID
        in: path
        name: authorId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.SeriesListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
      summary: Get an author's series
      tags:
      - authors
  /books:
    get:
      consumes:
      - application/json
      description: List Books
      parameters:
      - description: Pagination cursor
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.BookListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
      summary: List Books
      tags:
      - books
  /books/{bookId}:
    get:
      consumes:
      - application/json
      description: Get Book by ID
      parameters:
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lybbrio_internal_calibre.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrResponse'
      summary: Get Book by ID
      tags:
      - books
  /languages:
    get:
      consumes:
      - application/json
      description: Get all languages
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.LanguageListResponse'
      summary: Get all languages
      tags:
      - Languages
  /languages/{languageId}:
    get:
      consumes:
      - application/json
      description: Get a language by ID
      parameters:
      - description: Language ID
        in: path
        name: languageId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lybbrio_internal_calibre.Language'
      summary: Get a language
      tags:
      - Languages
  /languages/{languageId}/books:
    get:
      consumes:
      - application/json
      description: Get books for a language by ID
      parameters:
      - description: Language ID
        in: path
        name: languageId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.BookListResponse'
      summary: Get books for a language
      tags:
      - Languages
  /publishers:
    get:
      description: Get all publishers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.PublisherListResponse'
      summary: Get all publishers
      tags:
      - publishers
  /publishers/{publisherId}:
    get:
      description: Get a publisher by ID
      parameters:
      - description: Publisher ID
        in: path
        name: publisherId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lybbrio_internal_calibre.Publisher'
      summary: Get a publisher
      tags:
      - publishers
  /publishers/{publisherId}/books:
    get:
      description: Get a publisher's books by ID
      parameters:
      - description: Publisher ID
        in: path
        name: publisherId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.BookListResponse'
      summary: Get a publisher's books
      tags:
      - publishers
  /series:
    get:
      description: Get all series
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lybbrio_internal_handlers.SeriesListResponse'
      summary: Get all series
      tags:
      - series
  /series/{seriesId}:
    get:
      description: Get a series by ID
      parameters:
      - description: Series ID
        in: path
        name: seriesId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lybbrio_internal_calibre.Series'
      summary: Get a series
      tags:
      - series
  /series/{seriesId}/books:
    get:
      description: Get a series' books by ID
      parameters:
      - description: Series ID
        in: path
        name: seriesId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lybbrio_internal_handlers.BookListResponse'
      summary: Get a series' books
      tags:
      - series
  /tags:
    get:
      description: Get all tags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.TagListResponse'
      summary: Get all tags
      tags:
      - tags
  /tags/{tagId}:
    get:
      description: Get a tag by ID
      parameters:
      - description: Tag ID
        in: path
        name: tagId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lybbrio_internal_calibre.Tag'
      summary: Get a tag
      tags:
      - tags
  /tags/{tagId}/books:
    get:
      description: Get books for a tag by ID
      parameters:
      - description: Tag ID
        in: path
        name: tagId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.BookListResponse'
      summary: Get books for a tag
      tags:
      - tags
swagger: "2.0"
